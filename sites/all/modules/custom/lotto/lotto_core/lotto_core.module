<?php
module_load_include('inc', 'lotto_core', 'lotto_core_admin_menu');

function lotto_codelist_code_load($subcat){
    $query = db_select('lotto_codelist', 'lcd')->fields('lcd')->condition('sub_cat', $subcat)->execute();
    $codelist=array();
    while($codes = $query->fetchAssoc()){
	$codelist[ $codes['name'] ]= $codes;
    }
    return $codelist;
}

function lotto_codelist_code_decode($subcat, $code){
    $query = db_select('lotto_codelist', 'lcd')->fields('lcd')->condition('sub_cat', $subcat)->condition('code', $code)->execute();
    $codelist=array();
    while ( $codes = $query->fetchAssoc()){
	$codelist[ $codes['code'] ]= $codes;
    }
    return $codelist;
}

function lotto_results_grid_create($lottery_name, $lottery_results){
   $html = lotto_results_grid_create_top();
   $html .= lotto_results_grid_create_body($lottery_name, $lottery_results);
   $html .= lotto_results_grid_create_bottom();
    return $html;
}

function lotto_results_grid_create_top(){
    $html = "<table class=\"number_grid\" border=\"1\" >";
    $html .= "<tbody>";
    $html .= "<tr border=\"1\" >";
    return $html;
}
function lotto_results_grid_create_body($lottery_name, $lottery_results){ 
    $html = "";
    switch($lottery_name){
	case "lotto_max":
	    $i=1;
	    while( $i <= 49){
		if (in_array($i, $lottery_results)){
		$html .= "<td class=\"green\" >";
		} else $html .= "<td class=\"yellow\" >";
		
		$html .= $i;
		$html .="</td>";
		$i++;
	    }
	    break;
	 case "lotto_keno":
	     $i=1;
	    while( $i <= 80){
		if (in_array($i, $lottery_results)){
		$html .= "<td class=\"green\" >";
		} else $html .= "<td class=\"yellow\" >";
		
		$html .= $i;
		$html .="</td>";
		$i++;
	    }
		break;
    }
 return  $html;
}

 function lotto_results_grid_create_bottom(){   
    $html = "</tr>";
    $html .= "</tbody>";
    $html .= "</table>";
    return $html;
}

function lotto_results_render($lottery_name, $lottery_results){
    
    $html_results_grid = lotto_results_grid_create($lottery_name, $lottery_results);
    
    return $html_results_grid;
}

function lotto_number_grid_skipped_analysis($lottery_name, $current_stats, $previous_stats, $sum_last_100, $sorted=false, $vertical=false){
    
    
    switch($lottery_name){
	case 'lotto_max':
	    break;
	case 'lotto_keno':
	    $i=1; $x=80; $previous = array(); $current = array();
	    
	    while ($i <= $x){
		$previous[$i] = $previous_stats['s'.$i];
		$current[$i] = $current_stats['s'.$i];
		$i++;
	    }
	    if ($sorted){
		asort($previous);
		//array_multisort(array_values($previous), SORT_ASC, array_keys($previous), SORT_ASC, $previous);
	    }
	    
	    if ($vertical){
		$html = "<table class=\"number_grid\" id=\"v\" border=\"1\" >";
		$html .= "<tbody>";
		foreach($previous as $ind=>$num){
		    $html .="<tr>";
		    $html .="<td>".$ind."</td>";
		    $html .="<td";
		    $html .=($current[$ind] == 0) ? " class=\"green\" >" : ">"; 
		    $html .=  $num."</td>";
		    $html .="<td>".$sum_last_100['ss'.$ind]."</td>";  
		    $html .="</tr>";
		    $i++;
		}
	    } else {
		$html = "<table class=\"number_grid\" border=\"1\" >";
		$html .= "<tbody>";
		
		$html .="<tr>";		
		foreach($previous as $ind=>$num){
		$html .="<td>".$ind."</td>";
		}
		$html .="</tr>";
		
		$html .="<tr>";
		foreach($previous as $ind=>$num){
		$html .="<td";
		$html .= ($current[$ind] == 0) ? " class=\"green\" >" : ">";
		$html .=  $previous[$ind]."</td>";
		}
		$html .= "</tr>";
		
		$html .="<tr>";
		foreach($previous as $ind=>$num){
		    $html .="<td>".$sum_last_100['ss'.$ind]."</td>";
		}
		$html .= "</tr>";
	    }
	    break;
    }
    
    $html .= "</tbody>";
    $html .= "</table>";
    return $html;
}


function lotto_result_grid_create($lottery_name, $current_stats, $previous_stats){
    switch($lottery_name){
	case 'lotto_max':
	    break;
	case 'lotto_keno':
	    $html = "<table class=\"result_grid\" > <tbody>";
		
		$x=1;$z=10;  
		$header ="<tr><th></th>";
		while ($x <= $z){
		    $header .="<th>".$x."</th>";
		    $x++;
		}
		$html .= $header."</tr>";

		$x=1;$y=0; $z=10;//reset x to 1
		$i=1; $lt=80;
		$body="";   
		while ($i <= $lt){
		    if ($x == 1){
			$body .="<tr><th>".$y."</th>";
			$body .="<td";
			$body .= ($current_stats['s'.$i] == 0) ? " class=\"green\" >" : ">";
			$body .=  $previous_stats['s'.$i]."</td>";
		    } elseif ($x == $z){
			$body .="<td";
			$body .= ($current_stats['s'.$i] == 0) ? " class=\"green\" >" : ">";
			$body .=  $previous_stats['s'.$i]."</td>";
			$body .="</tr>";
			$y++;
			$x=0;
			} else {
			    $body .="<td";
			    $body .= ($current_stats['s'.$i] == 0) ? " class=\"green\" >" : ">";
			    $body .=  $previous_stats['s'.$i]."</td>";
			}
		    $x++;
		    $i++;
		}

		$html .= $body;  


		$html .= "</tbody></table>";
	    break;
    }
    
    return $html;
}

function lotto_pattern_grid_analysis($lottery_name, $lottery_id, $number_of_draws){
    
}

function lotto_pattern_grid_create($lottery_name, $lottery_stats_id=1, $number_of_draws=100, $pre_selected=array()){
    $html = "<table class=\"pattern_grid\" > <tbody>";
    $stat_type_name = 'each_draw_skipped';
    $stat_type_codes = lotto_codelist_code_load('stat_type');
    $stat_type = $stat_type_codes[$stat_type_name];
    switch($lottery_name){
	case 'lotto_max':
	    $x=1; $y=0; $z=49;
	    $header = "<tr><th></th>";
	    while ($x <= $z){
		$header .= "<th>".$x."</th>";
		//$header .= "<th></th>";
		$x++;
	    }
	    $header .="</tr>";
	    
	   $body="";
		if ($lottery_stats_id == 1){
		    $last_stats = lotto_stats_last_stat_available($lottery_name, $stat_type);
		    $lottery_stats_id = $last_stats['lksid'];
		    
		    $lottery_results = lotto_results_by_stat_id($lottery_name, $lottery_stats_id);
		    $lottery_draw_number = $lottery_results['draw_number'];
		}
	    
	    while($y <= $number_of_draws){	
		$x=1;
		//$current_stats_id = $lottery_stats_id - $y;
		$current_draw_number = $lottery_draw_number - $y;
		
		$current_lotto_results = lotto_results_by_draw_number($lottery_name, $current_draw_number);
		$current_stats = lotto_stats_by_draw_number($lottery_name, $current_draw_number);
		
		$draw_date = date('H:i', $current_lotto_results['draw_date']);
		
		$body .="<tr><th id='".$current_lotto_results['draw_number']."'>".$draw_date."</th>";
				
		if ( !isset($previous_stats) ){
		   $previous_stats = lotto_stats_by_draw_number($lottery_name, $current_draw_number - 1);
		}
		while($x <= $z){
		   $body .="<td";
		   $body .= ($current_stats['s'.$x] ==0)? " id='".$previous_stats['s'.$x]."' >": " class=\"black\" >";
		   $body .="</td>";
		   $x++;
		}
		$body .="</tr>";
		//
		$previous_stats = null;
		$previous_stats = $current_stats;
		$current_stats = null;
		//
		$y++;
	    }
	    break;
	case 'lotto_keno':
	    $x=1; $y=0; $z=80;
	    $header = "<tr><th></th>";
	    while ($x <= $z){
		if (in_array($x, $pre_selected)){
		    $header .= "<th id='".$x."' class=\"selected\" >".$x."</th>";
		} else $header .= "<th id='".$x."'>".$x."</th>";
		//$header .= "<th></th>";
		$x++;
	    }
	    $header .="</tr>";
	    
	    $body="";
	    $body .="<div id=\"ajx_keno_results_pattern_wrapper\" ></div>";
		if ($lottery_stats_id == 1){
		    $last_stats = lotto_stats_last_stat_available($lottery_name, $stat_type);
		    $lottery_stats_id = $last_stats['lksid'];
		    
		    $lottery_results = lotto_results_by_stat_id($lottery_name, $lottery_stats_id);
		    $lottery_draw_number = $lottery_results['draw_number'];
		}
	    
	    while($y <= $number_of_draws){	
		$x=1;
		//$current_stats_id = $lottery_stats_id - $y;
		$current_draw_number = $lottery_draw_number - $y;
		
		$current_lotto_results = lotto_results_by_draw_number($lottery_name, $current_draw_number);
		$current_stats = lotto_stats_by_draw_number($lottery_name, $current_draw_number, $stat_type);
		
		$draw_date = date('H:i', $current_lotto_results['draw_date']);
		
		$body .="<tr><th id='".$current_lotto_results['draw_number']."'>".$draw_date."</th>";
				
		if ( !isset($previous_stats) ){
		   $previous_stats = lotto_stats_by_draw_number($lottery_name, $current_draw_number - 1, $stat_type);
		}
		while($x <= $z){
		   $body .="<td";
		   $body .= ($current_stats['s'.$x] ==0)? " id='".$previous_stats['s'.$x]."' >": " class=\"black\" >";
		   $body .="</td>";
		   $x++;
		}
		$body .="</tr>";
		//
		$previous_stats = null;
		$previous_stats = $current_stats;
		$current_stats = null;
		//
		$y++;
	    }
	     
	    break;
    }
    $html .= $header;
    $html .= $body;
    $html .= "</tbody></table>";
    return $html;
}

function lotto_binary_results($lottery_name, $lottery_draw_num){
    $lotto_binary_results = array();
    switch($lottery_name){
	case 'lotto_max':
	    break;
	case 'lotto_keno':
	    $lotto_binary_results = lotto_binary_results_config($lottery_name);
	    $query = db_select('lotto_keno', 'lk')
			    ->fields('lk')
			    ->condition('draw_number', $lottery_draw_num)
			    ->execute();
	    while($lotto_results = $query->fetchAssoc()){
		$x=1; $y=20;
		while($x <= $y){
		    $lotto_binary_results[$lotto_results['n'.$x]] = 1;
		    $x++;
		}
	    }
	    break;
    }
    return $lotto_binary_results;
}

function lotto_binary_results_config($lottery_name){
    $binary_results_config = array();
    switch($lottery_name){
	case 'lotto_max':
	      $x=1; $y=49;
	    while($x <= $y){
		$binary_results_config[$x] = 0;
		$x++;
	    }	
	    break;
	case 'lotto_keno':
	    $x=1; $y=80;
	    while($x <= $y){
		$binary_results_config[$x] = 0;
		$x++;
	    }	    
	    break;
    }
    return $binary_results_config;
}

function get_curl_d_output($url){
	
         // create curl resource
        $ch = curl_init();

        // set url
        curl_setopt($ch, CURLOPT_URL, $url);

        //return the transfer as a string
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	
	//if site forwards you
	curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);	
	
	//for https sites
	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);     
	curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2); 

        // $output contains the output string
        $output = curl_exec($ch);

        // close curl resource to free up system resources
        curl_close($ch);
        return $output; 
}


function lotto_bets_validate_all($lottery_name){
    switch($lottery_name){
	case 'lotto_max':
	    break;
	case 'lotto_keno':	    
	    $unvalidated_bets = db_select('lotto_keno_bets', 'lkb')
				    ->fields('lkb', array('lkbid'))
				    ->condition('matches', null)
				    ->execute(); 
	    
	    while ($bets = $unvalidated_bets->fetchAssoc()){
		lotto_bets_validate($lottery_name, $bets['lkbid'] );
		}

	    break;
    }    
}

function lotto_bets_validate($lottery_name, $bet_id){
    switch($lottery_name){
	case 'lotto_max':
	    break;
	case 'lotto_keno':
	    $bets =  db_select('lotto_keno_bets', 'lkb')
				    ->fields('lkb')
				    ->condition('lkbid', $bet_id)
				    ->execute()
				    ->fetchAssoc(); 
		
	    $result_set = db_select('lotto_keno', 'lk')
				    ->fields('lk')
				    ->condition('draw_number', $bets['draw_number'])
				    ->execute()
				    ->fetchAssoc(); 
	    
		$i=1;$x=20; $result_array=array();
		while ($i <= $x){
		  $result_array[$i] = $result_set['n'.$i];
		  $i++;
		}
		
		$a=1;$b=$bets['picks']; $matches=0;
		while ($a <= $b){
		  if( in_array( $bets['b'.$a], $result_array) ){
		      $matches++;
		  }
		  $a++;
		}
		
		$win = lotto_prize_get($lottery_name, $bets['picks'], $matches);
		
		$update_bets = db_update('lotto_keno_bets')
				->fields(array(
				    'matches'=>$matches,
				    'win'=>$win
				    ))
				->condition('lkbid', $bets['lkbid'])
				->execute();
	    
	    break;
    }
}

function lotto_prize_get($lottery_name, $picks, $matches, $bonus=0){
    $prize_table = db_select('lotto_prize_table', 'lpt')
				->fields('lpt')
				->condition('lottery_name', $lottery_name)
				->condition('picks', $picks)
				->condition('matches', $matches)
				->condition('bonus', $bonus)
				->execute()
				->fetchAssoc();
		return $prize_table['win'];
}
?>